// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id String @id @default(cuid())

  email    String   @unique
  username String
  password String
  phone    String   @default("")
  role     UserRole @default(USER)

  sessions     Session[]
  reservations Reservation[]
}

model Session {
  id String @id @default(cuid())

  expiresAt DateTime

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

enum TableEnum {
  open
  closed
}

model Table {
  id String @id @default(cuid())

  status      TableEnum @default(open)
  countGuests Int
  tableNumber String @default("1")
  img         String?

  createdAt   DateTime      @default(now())
  reservation Reservation[]
}

model Reservation {
  id String @id @default(cuid())

  reservationDate String
  reservationTime String

  table Table[]

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  // createdAt DateTime @default(now())
}

model Category {
  id String @id @default(cuid())

  name     String
  img      String
  products Product[]
}

model Product {
  id String @id @default(cuid())

  name        String
  price       Float
  img         String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @default("1")
}

model Event {
  id String @id @default(cuid())

  name          String
  startDateTime DateTime @default(now())
  durationDays  String
  countFood     String
  countGuests   String
  img           String   @default("img")

  createdAt DateTime @default(now())
}
